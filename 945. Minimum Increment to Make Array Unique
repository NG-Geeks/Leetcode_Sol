Problem :: 945. Minimum Increment to Make Array Unique

You are given an integer array nums. In one move, you can pick an index i where 0 <= i < nums.length and increment nums[i] by 1.

Return the minimum number of moves to make every value in nums unique.

The test cases are generated so that the answer fits in a 32-bit integer.

Time Complezity :: O( N*max elemenet)

Space Complexity :: O( N* maxelement)

Code :: 
class Solution {
public:
    int minIncrementForUnique(vector<int>& nums) {
        int n = nums.size();
        int minIncrements = 0;
        int maxi = *max_element(begin(nums) ,end(nums));
        vector<int>frequencyCount(n+maxi+1,0);
        for (int &val : nums) {
            frequencyCount[val]++;
        }
        for (int i = 0; i < frequencyCount.size(); i++) {
            if (frequencyCount[i] <= 1) continue;
            int duplicates = frequencyCount[i] - 1;
            frequencyCount[i + 1] += duplicates;
            frequencyCount[i] = 1;
            minIncrements += duplicates;
        }

        return minIncrements;
    }
};
